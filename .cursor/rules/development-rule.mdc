---
alwaysApply: true
---

# Global rule

프로젝트 패키지 매니저로는 pnpm을 사용한다.
테스트 코드는 대상이 되는 코드와 같은 디렉토리에 위치하도록 구성한다.
더 이상 사용하지 않게 된 파일은 제거하며, 같은 목적의 서로 다른 파일이 여러개 존재하지 않도록 한다.
TDD를 할 때는 테스트 코드를 고쳐서 테스트를 통과시키는 방법을 쓰지 않고, 코드 로직을 수정해서 테스트를 통과시키도록 한다. 만약 테스트 코드를 고쳐야 할 필요성이 생길 경우 고치지 않고 개발자에게 보고한다.
리팩토링을 통해 특정 모듈 import문을 제거했을 경우, 해당 모듈이 다른 곳에서도 사용되는지 점검하고, 아무 곳에서도 사용되지 않을 경우 파일 자체를 제거한다.

# React Code Rule

1. **단일 책임 원칙 (Single Responsibility)**

   - 하나의 컴포넌트는 한 가지 역할만 하도록 유지.
   - UI와 로직이 복잡해지면 컴포넌트·훅·유틸로 분리.

2. **반복 제거 (DRY: Don’t Repeat Yourself)**

   - 중복 JSX나 로직은 재사용 가능한 컴포넌트나 함수로 추출.

3. **상태 최소화**

   - 꼭 필요한 곳에서만 `useState` / `useReducer` 사용.
   - 파생 상태는 `useMemo`나 계산식으로 처리.

4. **Props 단순화**

   - 필요 이상으로 깊게 전달하지 말고, Context로 대체.
   - 불필요한 props drilling 줄이기.

5. **의존성 명확화**

   - `useEffect` 등 훅의 의존성 배열을 정확히 관리.
   - 사이드이펙트는 최소화하고, 가능하면 순수 함수화.

6. **이름 명확성**

   - 컴포넌트·함수·변수 이름은 의도가 드러나게 작성.
   - 이벤트 핸들러는 `onClickSave`, 상태는 `isLoading`처럼 의미가 분명하도록.

7. **작게, 자주 리팩토링**

   - 한 번에 모든 걸 바꾸지 말고, 작은 변경을 반복해서 적용.
